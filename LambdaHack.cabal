name:           LambdaHack
-- The package version. See the Haskell package versioning policy (PVP)
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:+-+------- breaking API changes
--             | | +----- non-breaking API additions
--             | | | +--- code changes with no API change
version:       0.5.1.0
synopsis:      A game engine library for roguelike dungeon crawlers
description:   LambdaHack is a game engine library for roguelike games
               of arbitrary theme, size and complexity,
               packaged together with a small example dungeon crawler.
               .
               <<https://raw.githubusercontent.com/LambdaHack/media/master/screenshot/safari1.png>>
               .
               When completed, the engine will let you specify content
               to be procedurally generated, define the AI behaviour
               on top of the generic content-independent rules
               and compile a ready-to-play game binary, using either
               the supplied or a custom-made main loop.
               Several frontends are available (GTK is the default)
               and many other generic engine components are easily overridden,
               but the fundamental source of flexibility lies
               in the strict and type-safe separation of code from the content
               and of clients (human and AI-controlled) from the server.
               Please see the changelog file for recent improvements
               and the issue tracker for short-term plans. Long term vision
               revolves around procedural content generation and includes
               in-game content creation, auto-balancing and persistent
               content modification based on player behaviour.
               .
               Games known to use the LambdaHack library:
               .
               * Allure of the Stars, a near-future Sci-Fi game,
               <http://hackage.haskell.org/package/Allure>
               .
               * Space Privateers, an adventure game set in far future,
               <http://hackage.haskell.org/package/SpacePrivateers>
               .
               Note: All modules in this library are kept visible,
               to let games override and reuse them.
               OTOH, to reflect that some modules are implementation details
               relative to others, the source code adheres to the following
               convention. If a module has the same name as a directory,
               the module is the exclusive interface to the directory.
               No references to the modules in the directory are allowed
               except from the interface module. This policy is only binding
               when developing the library --- library users are free
               to access any modules, since the library authors are in
               no position to guess their particular needs.
homepage:      http://github.com/LambdaHack/LambdaHack
bug-reports:   http://github.com/LambdaHack/LambdaHack/issues
license:       BSD3
license-file:  LICENSE
tested-with:   GHC >= 7.8 && < 7.12
data-files:    GameDefinition/config.ui.default
               GameDefinition/PLAYING.md, README.md, LICENSE, CREDITS,
               CHANGELOG.md
extra-source-files: GameDefinition/MainMenu.ascii, Makefile
author:        Andres Loeh, Mikolaj Konarski
maintainer:    Mikolaj Konarski <mikolaj.konarski@funktory.com>
category:      Game Engine, Game
build-type:    Simple
cabal-version: >= 1.10

source-repository head
  type:               git
  location:           git://github.com/LambdaHack/LambdaHack.git

flag vty
  description:        switch to the vty frontend
  default:            False
  manual:             True

flag curses
  description:        switch to the curses frontend (not fully supported)
  default:            False
  manual:             True

flag with_expensive_assertions
  description:        turn on expensive assertions of well-tested code
  default:            False
  manual:             True

flag clients_as_threads
  description:        runs each client in a separate thread
  default:            False
  manual:             True

flag release
  description:        prepare for a release (expose internal functions and types, etc.)
  default:            False
  manual:             True

library
  exposed-modules:    Game.LambdaHack.Atomic
                      Game.LambdaHack.Atomic.CmdAtomic
                      Game.LambdaHack.Atomic.HandleAtomicWrite
                      Game.LambdaHack.Atomic.MonadAtomic
                      Game.LambdaHack.Atomic.MonadStateWrite
                      Game.LambdaHack.Atomic.PosAtomicRead
                      Game.LambdaHack.Client
                      Game.LambdaHack.Client.AI
                      Game.LambdaHack.Client.AI.ConditionM
                      Game.LambdaHack.Client.AI.HandleAbilityM
                      Game.LambdaHack.Client.AI.PickActorM
                      Game.LambdaHack.Client.AI.PickTargetM
                      Game.LambdaHack.Client.AI.Preferences
                      Game.LambdaHack.Client.AI.Strategy
                      Game.LambdaHack.Client.Bfs
                      Game.LambdaHack.Client.BfsM
                      Game.LambdaHack.Client.CommonM
                      Game.LambdaHack.Client.FileM
                      Game.LambdaHack.Client.HandleAtomicM
                      Game.LambdaHack.Client.HandleResponseM
                      Game.LambdaHack.Client.ItemSlot
                      Game.LambdaHack.Client.Key
                      Game.LambdaHack.Client.MonadClient
                      Game.LambdaHack.Client.ProtocolM
                      Game.LambdaHack.Client.State
                      Game.LambdaHack.Client.UI
                      Game.LambdaHack.Client.UI.Animation
                      Game.LambdaHack.Client.UI.Config
                      Game.LambdaHack.Client.UI.Content.KeyKind
                      Game.LambdaHack.Client.UI.DrawM
                      Game.LambdaHack.Client.UI.DisplayAtomicM
                      Game.LambdaHack.Client.UI.Frame
                      Game.LambdaHack.Client.UI.FrameM
                      Game.LambdaHack.Client.UI.Frontend
                      Game.LambdaHack.Client.UI.Frontend.Chosen
                      Game.LambdaHack.Client.UI.Frontend.Common
                      Game.LambdaHack.Client.UI.Frontend.Std
                      Game.LambdaHack.Client.UI.HandleHelperM
                      Game.LambdaHack.Client.UI.HandleHumanGlobalM
                      Game.LambdaHack.Client.UI.HandleHumanLocalM
                      Game.LambdaHack.Client.UI.HandleHumanM
                      Game.LambdaHack.Client.UI.HumanCmd
                      Game.LambdaHack.Client.UI.InventoryM
                      Game.LambdaHack.Client.UI.KeyBindings
                      Game.LambdaHack.Client.UI.MonadClientUI
                      Game.LambdaHack.Client.UI.Msg
                      Game.LambdaHack.Client.UI.MsgM
                      Game.LambdaHack.Client.UI.Overlay
                      Game.LambdaHack.Client.UI.OverlayM
                      Game.LambdaHack.Client.UI.RunM
                      Game.LambdaHack.Client.UI.SessionUI
                      Game.LambdaHack.Client.UI.Slideshow
                      Game.LambdaHack.Client.UI.SlideshowM
                      Game.LambdaHack.Common.Ability
                      Game.LambdaHack.Common.Actor
                      Game.LambdaHack.Common.ActorState
                      Game.LambdaHack.Common.ClientOptions
                      Game.LambdaHack.Common.Color
                      Game.LambdaHack.Common.ContentDef
                      Game.LambdaHack.Common.Dice
                      Game.LambdaHack.Common.EffectDescription
                      Game.LambdaHack.Common.Faction
                      Game.LambdaHack.Common.Flavour
                      Game.LambdaHack.Common.Frequency
                      Game.LambdaHack.Common.HighScore
                      Game.LambdaHack.Common.Item
                      Game.LambdaHack.Common.ItemDescription
                      Game.LambdaHack.Common.ItemStrongest
                      Game.LambdaHack.Common.Kind
                      Game.LambdaHack.Common.KindOps
                      Game.LambdaHack.Common.Level
                      Game.LambdaHack.Common.Misc
                      Game.LambdaHack.Common.MonadStateRead
                      Game.LambdaHack.Common.Perception
                      Game.LambdaHack.Common.PointArray
                      Game.LambdaHack.Common.Point
                      Game.LambdaHack.Common.Prelude
                      Game.LambdaHack.Common.Random
                      Game.LambdaHack.Common.RingBuffer
                      Game.LambdaHack.Common.Save
                      Game.LambdaHack.Common.Request
                      Game.LambdaHack.Common.Response
                      Game.LambdaHack.Common.State
                      Game.LambdaHack.Common.Thread
                      Game.LambdaHack.Common.Tile
                      Game.LambdaHack.Common.Time
                      Game.LambdaHack.Common.Vector
                      Game.LambdaHack.Content.CaveKind
                      Game.LambdaHack.Content.ItemKind
                      Game.LambdaHack.Content.ModeKind
                      Game.LambdaHack.Content.PlaceKind
                      Game.LambdaHack.Content.RuleKind
                      Game.LambdaHack.Content.TileKind
                      Game.LambdaHack.SampleImplementation.SampleMonadServer
                      Game.LambdaHack.Server
                      Game.LambdaHack.Server.BroadcastAtomic
                      Game.LambdaHack.Server.Commandline
                      Game.LambdaHack.Server.CommonM
                      Game.LambdaHack.Server.DebugM
                      Game.LambdaHack.Server.DungeonGen
                      Game.LambdaHack.Server.DungeonGen.Area
                      Game.LambdaHack.Server.DungeonGen.AreaRnd
                      Game.LambdaHack.Server.DungeonGen.Cave
                      Game.LambdaHack.Server.DungeonGen.Place
                      Game.LambdaHack.Server.EndM
                      Game.LambdaHack.Server.FileM
                      Game.LambdaHack.Server.Fov
                      Game.LambdaHack.Server.FovDigital
                      Game.LambdaHack.Server.HandleAtomicM
                      Game.LambdaHack.Server.HandleEffectM
                      Game.LambdaHack.Server.HandleRequestM
                      Game.LambdaHack.Server.ItemRev
                      Game.LambdaHack.Server.ItemM
                      Game.LambdaHack.Server.LoopM
                      Game.LambdaHack.Server.MonadServer
                      Game.LambdaHack.Server.PeriodicM
                      Game.LambdaHack.Server.ProtocolM
                      Game.LambdaHack.Server.StartM
                      Game.LambdaHack.Server.State

  if flag(clients_as_threads) {
    exposed-modules:    Game.LambdaHack.Client.LoopM
                        Game.LambdaHack.SampleImplementation.SampleMonadClient
  } else {
    exposed-modules:    Game.LambdaHack.SampleImplementation.SampleMonadClient
  }

  other-modules:      Paths_LambdaHack
  build-depends:
                      assert-failure >= 0.1,
                      async      >= 2,
                      base       >= 4 && <= 10,
                      base-compat >= 0.8.0,
                      binary     >= 0.7,
                      binary-orphans >= 0.1,
                      bytestring >= 0.9.2 ,
                      containers >= 0.5.3.0,
                      deepseq    >= 1.3,
                      directory  >= 1.1.0.1,
                      enummapset-th >= 0.6.0.0,
                      filepath   >= 1.2.0.1,
                      functor-infix >= 0.0.3,
                      ghc-prim,
                      hashable   >= 1.1.2.5,
                      hsini      >= 0.2,
                      keys       >= 3,
                      miniutter  >= 0.4.4,
                      time       >= 1.4,
                      pretty-show >= 1.6,
                      random     >= 1.1,
                      stm        >= 2.4,
                      text       >= 0.11.2.3,
                      transformers >= 0.4,
                      unordered-containers >= 0.2.3,
                      vector     >= 0.10

  default-language:   Haskell2010
  default-extensions: MonoLocalBinds, ScopedTypeVariables, OverloadedStrings
                      BangPatterns, RecordWildCards, NamedFieldPuns, MultiWayIf,
                      CPP
  other-extensions:   TemplateHaskell, MultiParamTypeClasses, RankNTypes,
                      TypeFamilies, FlexibleContexts, FlexibleInstances,
                      DeriveFunctor, FunctionalDependencies,
                      GeneralizedNewtypeDeriving, TupleSections,
                      DeriveFoldable, DeriveTraversable,
                      ExistentialQuantification, GADTs, StandaloneDeriving,
                      DataKinds, KindSignatures
--, DeriveGeneric
  ghc-options:        -Wall -fwarn-orphans -fwarn-tabs -fwarn-incomplete-uni-patterns -fwarn-incomplete-record-updates -fwarn-unrecognised-pragmas
  ghc-options:        -fno-warn-implicit-prelude -fno-ignore-asserts

  if impl(ghcjs) {
    other-modules:    Game.LambdaHack.Client.UI.Frontend.Dom
    build-depends:    ghcjs-dom >= 0.2
    cpp-options:      -DUSE_BROWSER -DUSE_JSFILE_CLIENT -DUSE_JSFILE_SERVER
  } else { if flag(vty) {
    other-modules:    Game.LambdaHack.Client.UI.Frontend.Vty
    build-depends:    vty >= 5
    cpp-options:      -DUSE_VTY
  } else { if flag(curses) {
    other-modules:    Game.LambdaHack.Client.UI.Frontend.Curses
    build-depends:    hscurses >= 1.4.1
    cpp-options:      -DUSE_CURSES
  } else {
    other-modules:    Game.LambdaHack.Client.UI.Frontend.Gtk
    build-depends:    gtk3 >= 0.12.1
    pkgconfig-depends: gthread-2.0, gtk+-3.0
  } } }

  if impl(ghcjs) {
    other-modules:    Game.LambdaHack.Common.JSFile
  } else {
    other-modules:    Game.LambdaHack.Common.HSFile
    build-depends:    zlib >= 0.5.3.1
  }

  if flag(with_expensive_assertions)
    cpp-options:      -DWITH_EXPENSIVE_ASSERTIONS

  if flag(clients_as_threads)
    cpp-options:      -DCLIENTS_AS_THREADS

  if flag(release)
    cpp-options:      -DEXPOSE_INTERNAL

executable LambdaHack
  hs-source-dirs:     GameDefinition
  main-is:            Main.hs
  other-modules:      Client.UI.Content.KeyKind,
                      Content.CaveKind,
                      Content.ItemKind,
                      Content.ItemKindActor,
                      Content.ItemKindOrgan,
                      Content.ItemKindBlast,
                      Content.ItemKindTemporary,
                      Content.ModeKind,
                      Content.ModeKindPlayer,
                      Content.PlaceKind,
                      Content.RuleKind,
                      Content.TileKind,
                      TieKnot,
                      Paths_LambdaHack
  build-depends:      LambdaHack,
                      template-haskell >= 2.6,

                      assert-failure >= 0.1,
                      async      >= 2,
                      base       >= 4 && <= 10,
                      base-compat >= 0.8.0,
                      binary     >= 0.7,
                      binary-orphans >= 0.1,
                      bytestring >= 0.9.2 ,
                      containers >= 0.5.3.0,
                      deepseq    >= 1.3,
                      directory  >= 1.1.0.1,
                      enummapset-th >= 0.6.0.0,
                      filepath   >= 1.2.0.1,
                      functor-infix >= 0.0.3,
                      ghc-prim,
                      hashable   >= 1.1.2.5,
                      hsini      >= 0.2,
                      keys       >= 3,
                      miniutter  >= 0.4.4,
                      time       >= 1.4,
                      pretty-show >= 1.6,
                      random     >= 1.1,
                      stm        >= 2.4,
                      text       >= 0.11.2.3,
                      transformers >= 0.4,
                      unordered-containers >= 0.2.3,
                      vector     >= 0.10

  default-language:   Haskell2010
  default-extensions: MonoLocalBinds, ScopedTypeVariables, OverloadedStrings
                      BangPatterns, RecordWildCards, NamedFieldPuns, MultiWayIf
  other-extensions:   TemplateHaskell
  ghc-options:        -Wall -fwarn-orphans -fwarn-tabs -fwarn-incomplete-uni-patterns -fwarn-incomplete-record-updates -fwarn-unrecognised-pragmas
  ghc-options:        -fno-warn-implicit-prelude -fno-ignore-asserts
  ghc-options:        -threaded -rtsopts

  if impl(ghcjs) {
-- This is the largest GHCJS_BUSY_YIELD value that does not cause dropped frames
-- on my machine with default --maxFps.
    cpp-options:      -DGHCJS_BUSY_YIELD=50
    ghc-options:      "-with-rtsopts=-A99m"
  } else {
    build-depends:    zlib >= 0.5.3.1
    ghc-options:      "-with-rtsopts=-A99m -K100K"
-- get back to -K1K when I can use pretty-1.1.3.4 (TH depends on an old one)
  }

test-suite test
  type:               exitcode-stdio-1.0
  hs-source-dirs:     GameDefinition, test
  main-is:            test.hs
  build-depends:      LambdaHack,
                      template-haskell >= 2.6,

                      assert-failure >= 0.1,
                      async      >= 2,
                      base       >= 4 && <= 10,
                      base-compat >= 0.8.0,
                      binary     >= 0.7,
                      binary-orphans >= 0.1,
                      bytestring >= 0.9.2 ,
                      containers >= 0.5.3.0,
                      deepseq    >= 1.3,
                      directory  >= 1.1.0.1,
                      enummapset-th >= 0.6.0.0,
                      filepath   >= 1.2.0.1,
                      functor-infix >= 0.0.3,
                      ghc-prim,
                      hashable   >= 1.1.2.5,
                      hsini      >= 0.2,
                      keys       >= 3,
                      miniutter  >= 0.4.4,
                      time       >= 1.4,
                      pretty-show >= 1.6,
                      random     >= 1.1,
                      stm        >= 2.4,
                      text       >= 0.11.2.3,
                      transformers >= 0.4,
                      unordered-containers >= 0.2.3,
                      vector     >= 0.10

  default-language:   Haskell2010
  default-extensions: MonoLocalBinds, ScopedTypeVariables, OverloadedStrings
                      BangPatterns, RecordWildCards, NamedFieldPuns, MultiWayIf
  other-extensions:   TemplateHaskell
  ghc-options:        -Wall -fwarn-orphans -fwarn-tabs -fwarn-incomplete-uni-patterns -fwarn-incomplete-record-updates -fwarn-unrecognised-pragmas
  ghc-options:        -fno-warn-implicit-prelude -fno-ignore-asserts
  ghc-options:        -threaded -rtsopts

  if impl(ghcjs) {
-- This is the largest GHCJS_BUSY_YIELD value that does not cause dropped frames
-- on my machine with default --maxFps.
    cpp-options:      -DGHCJS_BUSY_YIELD=50
    ghc-options:      "-with-rtsopts=-A99m"
  } else {
    build-depends:    zlib >= 0.5.3.1
    ghc-options:      "-with-rtsopts=-A99m -K100K"
-- get back to -K1K when I can use pretty-1.1.3.4 (TH depends on an old one)
  }
